-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module IaosPosts.Scalar exposing (Codecs, Date(..), Json(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type Date
    = Date String


type Json
    = Json String


defineCodecs :
    { codecDate : Codec valueDate
    , codecJson : Codec valueJson
    }
    -> Codecs valueDate valueJson
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueDate valueJson
    ->
        { codecDate : Codec valueDate
        , codecJson : Codec valueJson
        }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueDate valueJson
    = Codecs (RawCodecs valueDate valueJson)


type alias RawCodecs valueDate valueJson =
    { codecDate : Codec valueDate
    , codecJson : Codec valueJson
    }


defaultCodecs : RawCodecs Date Json
defaultCodecs =
    { codecDate =
        { encoder = \(Date raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Date
        }
    , codecJson =
        { encoder = \(Json raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Json
        }
    }
